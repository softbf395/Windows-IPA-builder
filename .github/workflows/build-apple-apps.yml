name: Build Apple Devices Apps

on:
  workflow_dispatch: # Go to Actions > Build Apple Devices Apps > Run Workflow when app or test is ready!

jobs:
  build-apple-devices:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Xcode
        uses: actions/setup-xcode@v3
        with:
          xcode-version: 'latest-stable'

      - name: Read Supported Devices and Languages
        run: |
          SUPPORTED_PLATFORMS=$(jq -r '.Apple[].platform' SupportedDevices.json)
          SUPPORTED_PLATFORMS_BOOL=$(jq -r '.Apple[].enabled' SupportedDevices.json)
          SUPPORTED_LANGUAGES=$(jq -r '.Language[].language' Languages.json)
          SUPPORTED_LANGUAGES_BOOL=$(jq -r '.Language[].enabled' Languages.json)
          INFO_JSON=$(jq -r '.info' Info.json)
          TESTING_APP=$(jq -r '.testingApp' Info.json)
          APP_VERSION=$(jq -r '.version' Info.json)

      - name: Build for Supported Platforms
        run: |
          for i in "${!SUPPORTED_PLATFORMS[@]}"; do
            if [[ "${SUPPORTED_PLATFORMS_BOOL[$i]}" == "true" ]]; then
              xcodebuild -configuration Release -project YourProjectName.xcodeproj -scheme YourSchemeName -destination "platform=${SUPPORTED_PLATFORMS[$i]},arch=arm64"
            fi
          done

      - name: Install Languages
        run: |
          for i in "${!SUPPORTED_LANGUAGES[@]}"; do
            if [[ "${SUPPORTED_LANGUAGES_BOOL[$i]}" == "true" ]]; then
              # Your language installation command here, using SUPPORTED_LANGUAGES[$i]
            fi
          done

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ APP_VERSION }}
          name: ${{ INFO_JSON.appname }}
          body: |
            Description: ${{ INFO_JSON.description }}
            ChangeLog: ${{ INFO_JSON.changelog }}
          draft: ${{ TESTING_APP }}
          prerelease: ${{ TESTING_APP }}

      - name: Commit Changes
        run: |
          git add .
          git commit -m "Updated artifacts"

      - name: Upload Artifacts to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/${INFO_JSON.appname}-${APP_VERSION}.ipa
          asset_name: ${{ INFO_JSON.appname}-${APP_VERSION}.ipa
          asset_content_type: application/octet-stream
